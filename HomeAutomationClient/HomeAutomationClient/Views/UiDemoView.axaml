<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:De.Hochstaetter.HomeAutomationClient.Views"
             xmlns:vm="clr-namespace:De.Hochstaetter.HomeAutomationClient.ViewModels"
             xmlns:c="clr-namespace:De.Hochstaetter.HomeAutomationClient.Controls"
             xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
             xmlns:co="clr-namespace:De.Hochstaetter.HomeAutomationClient.Converters"
             mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="500"
             x:Class="De.Hochstaetter.HomeAutomationClient.Views.UiDemoView"
             x:DataType="vm:UiDemoViewModel">
	<Grid RowDefinitions="*" x:Name="RootElement">
		<Grid RowDefinitions="Auto,Auto,*,Auto" Grid.Row="0">

			<StackPanel x:Name="MainContentElement" Orientation="Vertical" Margin="16" Grid.Row="0" VerticalAlignment="Top">
				<TextBlock Text="Home Automation Control Center UI Test" FontSize="24" TextAlignment="Center" FontWeight="Bold" TextWrapping="Wrap" HorizontalAlignment="Center" />
				<!--<TextBlock Text="{Binding ApiUri, TargetNullValue='http://www.hochstaetter.de/api'}" HorizontalAlignment="Center" />
                <TextBlock HorizontalAlignment="Center" Margin="0,0,0,20">
                    <Run Text="Culture:" />
                    <Run Text="{Binding Culture, Mode=OneWay}" />
                    <Run Text="," />
                    <Run Text="UICulture:" />
                    <Run Text="{Binding UiCulture, Mode=OneWay}" />
                </TextBlock>-->
			</StackPanel>
			<Grid Grid.Row="1" x:Name="InnerGrid">
				<WrapPanel Orientation="Horizontal" Width="{Binding ElementName=InnerGrid, Path=Bounds.Width}">
					<WrapPanel.Styles>
						<Style Selector="HeaderedContentControl">
							<Setter Property="Margin" Value="4" />
						</Style>
					</WrapPanel.Styles>
					<!--<HeaderedContentControl Classes="GroupBox" Header="Half Circle Gauge">
                            <Viewbox Width="300">
                                <views:GaugeTestView />
                            </Viewbox>
                        </HeaderedContentControl>
                        <HeaderedContentControl Classes="GroupBox" Header="Linear Gauge">
                            <Viewbox Width="300">
                                <views:LinearGaugeTestView />
                            </Viewbox>
                        </HeaderedContentControl>
                        <HeaderedContentControl Classes="GroupBox" Header="Dialog">
                            <StackPanel>
                                <Button Content="Complex Error MessageBox" Command="{Binding ShowComplexDialogCommand}" />
                                <Button Content="Simple Error MessageBox" Command="{Binding ShowSimpleDialogCommand}" />
                            </StackPanel>
                        </HeaderedContentControl>-->
					<HeaderedContentControl IsVisible="{Binding ShowInverters}" Classes="GroupBox" Header="{x:Static p:Resources.Inverters}">
						<ItemsControl ItemsSource="{Binding Inverters}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<WrapPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<c:InverterControl ColorAllTicks="{Binding Path=((vm:UiDemoViewModel)DataContext).ColorAllTicks, FallbackValue={x:False}, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
													   Height="250"
													   Inverter="{Binding Inverter}"
													   DeviceKey="{Binding Key}"
													   Margin="8" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</HeaderedContentControl>
					<HeaderedContentControl Classes="GroupBox" Header="Smart Meter" IsVisible="{Binding SmartMeter, Converter={co:Null2Bool}}">
						<c:SmartMeterControl Height="250" VerticalAlignment="Top" Margin="8"
											 MeterStatus="{Binding MeterStatus}"
											 SmartMeter="{Binding SmartMeter}"
											 Gen24Config="{Binding Gen24Config}"
											 ColorAllTicks="{Binding ColorAllTicks}" />
					</HeaderedContentControl>
					<HeaderedContentControl Classes="GroupBox" Header="{x:Static p:Resources.Battery}" IsVisible="{Binding BatteryGen24System, Converter={co:Null2Bool}}">
						<c:EnergyStorageControl Height="250" VerticalAlignment="Top" Margin="8"
												Gen24System="{Binding BatteryGen24System}"/>
					</HeaderedContentControl>
				</WrapPanel>
			</Grid>
			<HeaderedContentControl Grid.Row="2" IsVisible="{Binding ShowPowerConsumers}" Classes="GroupBox" Header="Power Consumer">
				<ItemsControl ItemsSource="{Binding FritzBoxDevices}" x:Name="PowerConsumerItemsControl">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel Orientation="Vertical" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<c:PowerConsumer Width="180"
                                             Device="{Binding Device}"
                                             Margin="8"
                                             DeviceKey="{Binding Key}"
                                             SwitchCommand="{Binding ((vm:UiDemoViewModel)DataContext).SwitchDeviceCommand, FallbackValue={x:Null}, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
                                             SetColorTemperatureCommand="{Binding ((vm:UiDemoViewModel)DataContext).SetColorTemperatureCommand, FallbackValue={x:Null}, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
                                             SetHueCommand="{Binding ((vm:UiDemoViewModel)DataContext).SetHueCommand, FallbackValue={x:Null}, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
                                             SetSaturationCommand="{Binding ((vm:UiDemoViewModel)DataContext).SetSaturationCommand, FallbackValue={x:Null}, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
                                             SetBrightnessCommand="{Binding ((vm:UiDemoViewModel)DataContext).SetBrightnessCommand, FallbackValue={x:Null}, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"/>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</HeaderedContentControl>
			<StackPanel Grid.Row="3" Margin="16" Orientation="Horizontal">
				<TextBlock Text="{x:Static p:Resources.ColorAllGaugeTicks}" Margin="0,0,8,0" />
				<ToggleButton Classes="OnOff" Height="16"
                              IsChecked="{Binding ColorAllTicks}" />
			</StackPanel>
		</Grid>
        <c:BusyAnimation BusyText="{Binding BusyText}" Grid.Row="0" />
	</Grid>
</UserControl>