<c:DeviceControlBase xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:De.Hochstaetter.HomeAutomationClient.Controls"
             xmlns:co="clr-namespace:De.Hochstaetter.HomeAutomationClient.Converters"
             xmlns:m="clr-namespace:De.Hochstaetter.HomeAutomationClient.Misc"
             xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
             mc:Ignorable="d" d:DesignWidth="220" d:DesignHeight="254"
             x:Class="De.Hochstaetter.HomeAutomationClient.Controls.SmartMeterControl">
	<Viewbox DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:SmartMeterControl}}">
		<Border BorderBrush="DimGray" BorderThickness="1" Width="110">
			<Grid x:Name="BackgroundProvider" Background="{Binding MeterStatus, FallbackValue=LightGray, Converter={co:Gen24Status2Brush}}" RowDefinitions="Auto,Auto,Auto">

				<Grid.Resources>
					<ControlTheme TargetType="c:LinearGauge" x:Key="PowerLinearGaugeStyle">
						<Setter Property="Minimum" Value="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter IsMinimum=True, IsOnePhase=True}, FallbackValue=-8050}" />
						<Setter Property="Maximum" Value="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter IsOnePhase=True}, FallbackValue=8050}" />
						<Setter Property="UnitName" Value="W" />
						<Setter Property="FontSize" Value="9"/>
						<Setter Property="StringFormat" Value="N1"/>
						<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.MidIsGood}" />
						<Setter Property="Origin" Value=".5" />
						<Setter Property="Margin" Value="4,0,4,2" />
					</ControlTheme>

					<ControlTheme TargetType="c:LinearGauge" x:Key="VoltageLinearGaugeStyle" BasedOn="{StaticResource PowerLinearGaugeStyle}">
						<Setter Property="Minimum" Value="207" />
						<Setter Property="Maximum" Value="253" />
						<Setter Property="UnitName" Value="V" />
					</ControlTheme>

					<ControlTheme TargetType="c:LinearGauge" x:Key="CurrentLinearGaugeStyle" BasedOn="{StaticResource VoltageLinearGaugeStyle}">
						<Setter Property="Minimum" Value="-35" />
						<Setter Property="Maximum" Value="35" />
						<Setter Property="StringFormat" Value="N3" />
						<Setter Property="UnitName" Value="A" />
					</ControlTheme>
				</Grid.Resources>

				<Grid.Styles>
					<Style Selector="c|HalfCircleGauge">
						<Setter Property="TickFill" Value="{DynamicResource TickFill}" />
						<Setter Property="HandFill" Value="{DynamicResource HandFill}" />
						<Setter Property="ColorAllTicks" Value="{Binding ColorAllTicks}"/>
					</Style>
				</Grid.Styles>

				<StackPanel Grid.Row="0">
					<Viewbox HorizontalAlignment="Stretch" Width="100" StretchDirection="DownOnly">
						<TextBlock HorizontalAlignment="Stretch" FontSize="8" TextAlignment="Center"
                                   Text="{Binding SmartMeter.Model, FallbackValue='---', TargetNullValue='---', Mode=OneWay}"/>
					</Viewbox>
					<Viewbox HorizontalAlignment="Stretch" Width="100" StretchDirection="DownOnly">
						<TextBlock HorizontalAlignment="Stretch" FontSize="8" TextAlignment="Center">
							<Run Text="("/><Run Text="{Binding MeterStatus.StatusCode, FallbackValue='---', Converter={co:PowerMeterStatusLocalize}, Mode=OneWay}"/><Run Text=")"/>
						</TextBlock>
					</Viewbox>
				</StackPanel>
				<Border Grid.Row="1" Width="100" Height="85" Margin="4" x:Name="InnerBackgroundProvider"
                        BorderThickness=".2" BorderBrush="Black">
					<Grid>
						<Grid x:Name="PowerActiveGauge" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PowerActiveGauge}}" RowDefinitions="Auto,Auto,Auto">

							<TextBlock FontSize="10" FontWeight="Normal" Text="{x:Static p:Resources.ActivePower}" TextAlignment="Center" />

							<TextBlock FontSize="10" FontWeight="Medium" Grid.Row="1" Margin="0,0,0,2"
                                       Width="{Binding Bounds.Width, ElementName=PowerActiveGauge}" HorizontalAlignment="Stretch" VerticalAlignment="Top" TextAlignment="Center">
								<Run Text="{Binding SmartMeter.ActivePowerSum, StringFormat=N1, FallbackValue=0, TargetNullValue=0}" />
								<Run Text="W" />
							</TextBlock>

							<c:HalfCircleGauge Value="{Binding SmartMeter.ActivePowerSum, FallbackValue=0, TargetNullValue=0}"
                                               Minimum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter IsMinimum=True}, FallbackValue=-24150}"
                                               Maximum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter IsMinimum=False}, FallbackValue=24150}"
                                               GaugeColors="{x:Static m:GaugeColors.MidIsGood}"
                                               Origin=".5" Width="92" Grid.Row="2" />
						</Grid>

						<Grid x:Name="PowerActive" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PowerActive}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource PowerLinearGaugeStyle}" />
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{x:Static p:Resources.ActivePower}" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L1" Value="{Binding SmartMeter.ActivePowerL1, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L2" Value="{Binding SmartMeter.ActivePowerL2, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L3" Value="{Binding SmartMeter.ActivePowerL3, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Sum}" Value="{Binding SmartMeter.ActivePowerSum, FallbackValue=0, TargetNullValue=0}"
                                               Minimum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter IsMinimum=True}, FallbackValue=-24150}"
                                               Maximum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter}, FallbackValue=-24150}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="PowerApparent" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PowerApparent}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource PowerLinearGaugeStyle}">
									<Setter Property="UnitName" Value="VA" />
									<Setter Property="Minimum" Value="0" />
									<Setter Property="Origin" Value="0" />
									<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.HighIsBad}" />
								</ControlTheme>
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{x:Static p:Resources.ApparentPower}" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L1" Value="{Binding SmartMeter.ApparentPowerL1, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L2" Value="{Binding SmartMeter.ApparentPowerL2, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L3" Value="{Binding SmartMeter.ApparentPowerL3, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Sum}" Value="{Binding SmartMeter.ApparentPowerSum, FallbackValue=0, TargetNullValue=0}"
                                               Maximum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter}, FallbackValue=-24150}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="PowerReactive" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PowerReactive}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource PowerLinearGaugeStyle}">
									<Setter Property="UnitName" Value="VA(r)" />
								</ControlTheme>
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{x:Static p:Resources.ReactivePower}" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L1" Value="{Binding SmartMeter.ReactivePowerL1, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L2" Value="{Binding SmartMeter.ReactivePowerL2, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L3" Value="{Binding SmartMeter.ReactivePowerL3, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Sum}" Value="{Binding SmartMeter.ReactivePowerSum, FallbackValue=0, TargetNullValue=0}"
                                               Minimum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter IsMinimum=True}, FallbackValue=-24150}"
                                               Maximum="{Binding Gen24Config.InverterSettings.PowerLimitSettings.ExportLimits, Converter={co:StrictestLimitConverter}, FallbackValue=-24150}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="PowerOutOfBalance" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PowerOutOfBalance}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource PowerLinearGaugeStyle}">
									<Setter Property="Maximum" Value="4600" />
									<Setter Property="Minimum" Value="0" />
									<Setter Property="Origin" Value="0" />
									<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.HighIsBad}" />
								</ControlTheme>
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{x:Static p:Resources.OutOfBalance}" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L12" Value="{Binding SmartMeter.OutOfBalancePowerL12, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L23" Value="{Binding SmartMeter.OutOfBalancePowerL23, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L31" Value="{Binding SmartMeter.OutOfBalancePowerL31, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="Maximum" Value="{Binding SmartMeter.OutOfBalancePowerMax, FallbackValue=0, TargetNullValue=0}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="PowerFactor" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PowerFactor}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource PowerLinearGaugeStyle}">
									<Setter Property="Maximum" Value="1" />
									<Setter Property="Minimum" Value="-1" />
									<Setter Property="UnitName" Value="" />
									<Setter Property="StringFormat" Value="N3" />
									<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.MidIsBad}" />
								</ControlTheme>
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="cos(φ)" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L1" Value="{Binding SmartMeter.PowerFactorL1, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L2" Value="{Binding SmartMeter.PowerFactorL2, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L3" Value="{Binding SmartMeter.PowerFactorL3, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Total}" Value="{Binding SmartMeter.PowerFactorTotal, FallbackValue=0, TargetNullValue=0}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="PhaseVoltage" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PhaseVoltage}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource VoltageLinearGaugeStyle}" />
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" Text="{x:Static p:Resources.PhaseVoltage}" TextAlignment="Center" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Value="{Binding SmartMeter.PhaseVoltageL1, FallbackValue=0, TargetNullValue=0}" Label="L1" />
								<c:LinearGauge Theme="{DynamicResource Local}" Value="{Binding SmartMeter.PhaseVoltageL2, FallbackValue=0, TargetNullValue=0}" Label="L2" />
								<c:LinearGauge Theme="{DynamicResource Local}" Value="{Binding SmartMeter.PhaseVoltageL3, FallbackValue=0, TargetNullValue=0}" Label="L3" />
								<c:LinearGauge Theme="{DynamicResource Local}" Value="{Binding SmartMeter.PhaseVoltageAverage, FallbackValue=0, TargetNullValue=0}" Label="{x:Static p:Resources.AverageShort}" />
							</StackPanel>
						</Grid>

						<StackPanel x:Name="PhaseVoltageGauge" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool PhaseVoltageGauge}}">
							<TextBlock Text="{x:Static p:Resources.GridHealth}" HorizontalAlignment="Center" FontSize="10" Margin="0,0,0,4" />
							<UniformGrid Rows="2" Columns="2" Margin="0,6,0,0">
								<UniformGrid.Resources>
									<ControlTheme x:Key="Local" TargetType="c:HalfCircleGauge">
										<Setter Property="Minimum" Value="207" />
										<Setter Property="Maximum" Value="253" />
										<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.MidIsGood}" />
										<Setter Property="Origin" Value=".5" />
									</ControlTheme>
								</UniformGrid.Resources>

								<!-- ReSharper disable Xaml.RedundantAttachedProperty -->
								<c:HalfCircleGauge Theme="{DynamicResource Local}" Grid.Row="0" Grid.Column="0" Margin="1"
                                                   Value="{Binding SmartMeter.PhaseVoltageL1, FallbackValue=0, TargetNullValue=0}" />

								<c:HalfCircleGauge Theme="{DynamicResource Local}" Grid.Row="0" Grid.Column="1" Margin="1"
                                                   Value="{Binding SmartMeter.PhaseVoltageL2, FallbackValue=0, TargetNullValue=0}" />

								<c:HalfCircleGauge Theme="{DynamicResource Local}" Grid.Row="1" Grid.Column="0" Margin="1"
                                                   Value="{Binding SmartMeter.PhaseVoltageL3, FallbackValue=0, TargetNullValue=0}" />

								<c:HalfCircleGauge Theme="{DynamicResource Local}" Grid.Row="1" Grid.Column="1" Margin="1" Minimum="49" Maximum="51"
                                                   Value="{Binding SmartMeter.Frequency, FallbackValue=0, TargetNullValue=0}"
                                                   StringFormat="N1" />
								<!-- ReSharper restore Xaml.RedundantAttachedProperty -->
							</UniformGrid>
						</StackPanel>

						<Grid x:Name="LineVoltage" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool LineVoltage}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme TargetType="c:LinearGauge" x:Key="Local" BasedOn="{StaticResource VoltageLinearGaugeStyle}">
									<Setter Property="Minimum" Value="358.5345171668" />
									<Setter Property="Maximum" Value="438.2088543149" />
								</ControlTheme>
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" Text="{x:Static p:Resources.LineVoltage}" TextAlignment="Center" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L12" Value="{Binding SmartMeter.LineVoltageL12, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L23" Value="{Binding SmartMeter.LineVoltageL23, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L31" Value="{Binding SmartMeter.LineVoltageL31, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.AverageShort}" Value="{Binding SmartMeter.LineVoltageAverage, FallbackValue=0, TargetNullValue=0}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="Current" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool Current}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource CurrentLinearGaugeStyle}" />
							</Grid.Resources>

							<TextBlock Grid.Row="0" FontSize="10" Text="{x:Static p:Resources.Current}" TextAlignment="Center" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L1" Value="{Binding SmartMeter.CurrentL1, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L2" Value="{Binding SmartMeter.CurrentL2, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L3" Value="{Binding SmartMeter.CurrentL3, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Sum}" Value="{Binding SmartMeter.TotalCurrent, FallbackValue=0, TargetNullValue=0}"
                                                   Maximum="105" Minimum="-105" />
							</StackPanel>
						</Grid>

						<Grid x:Name="CurrentOutOfBalanceGauge" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool CurrentOutOfBalanceGauge}}" RowDefinitions="Auto,Auto,Auto">

                            <TextBlock FontSize="10" FontWeight="Normal" Text="{x:Static p:Resources.OutOfBalance}" TextAlignment="Center" />

							<TextBlock FontSize="10" FontWeight="Medium" Grid.Row="1" Margin="0,0,0,2"
                                       Width="{Binding Bounds.Width, ElementName=CurrentOutOfBalanceGauge}" HorizontalAlignment="Stretch" VerticalAlignment="Top" TextAlignment="Center">
								<Run Text="{Binding SmartMeter.OutOfBalanceCurrentMax, FallbackValue=0, TargetNullValue=0, StringFormat=N3}" />
								<Run Text="A" />
							</TextBlock>

							<c:HalfCircleGauge Value="{Binding SmartMeter.OutOfBalanceCurrentMax, FallbackValue=0, TargetNullValue=0}"
                                               Minimum="0" Grid.Row="2"
                                               Maximum="20"
                                               GaugeColors="{x:Static m:GaugeColors.HighIsBad}"
                                               Width="92" />
						</Grid>
						<Grid x:Name="CurrentOutOfBalance" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool CurrentOutOfBalance}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:LinearGauge" BasedOn="{StaticResource CurrentLinearGaugeStyle}">
									<Setter Property="Minimum" Value="0" />
									<Setter Property="Origin" Value="0" />
									<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.HighIsBad}" />
								</ControlTheme>
							</Grid.Resources>

                            <TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{x:Static p:Resources.OutOfBalance}" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L12" Value="{Binding SmartMeter.OutOfBalanceCurrentL12, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L23" Value="{Binding SmartMeter.OutOfBalanceCurrentL23, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="L31" Value="{Binding SmartMeter.OutOfBalanceCurrentL31, FallbackValue=0, TargetNullValue=0}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="Maximum" Value="{Binding SmartMeter.OutOfBalanceCurrentMax, FallbackValue=0, TargetNullValue=0}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="MoreEnergy" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool MoreEnergy}}" RowDefinitions="Auto,*">
							<Grid.Resources>
								<ControlTheme TargetType="c:LinearGauge" x:Key="Local" BasedOn="{StaticResource PowerLinearGaugeStyle}">
									<Setter Property="GaugeColors" Value="{x:Static m:GaugeColors.AllIsGood}" />
									<Setter Property="UnitName" Value="kWh" />
									<Setter Property="Minimum" Value="99999999" />
									<Setter Property="Origin" Value="0" />
									<Setter Property="Maximum" Value="100000000" />
								</ControlTheme>
							</Grid.Resources>

                            <TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{x:Static p:Resources.Energy}" />

							<StackPanel Grid.Row="1" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="1.8.0" Value="{Binding SmartMeter.EnergyActiveConsumed, FallbackValue=0, TargetNullValue=0, Converter={co:Multiply Factor=.001}}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="2.8.0" Value="{Binding SmartMeter.EnergyActiveProduced, FallbackValue=0, TargetNullValue=0, Converter={co:Multiply Factor=.001}}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="3.8.0" Value="{Binding SmartMeter.EnergyReactiveConsumed, FallbackValue=0, TargetNullValue=0, Converter={co:Multiply Factor=.001}}" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="4.8.0" Value="{Binding SmartMeter.EnergyReactiveProduced, FallbackValue=0, TargetNullValue=0, Converter={co:Multiply Factor=.001}}" />
							</StackPanel>
						</Grid>

						<Grid x:Name="More" IsVisible="{Binding Mode, Converter={co:MeterDisplayMode2Bool More}}" RowDefinitions="Auto,Auto,*">
							<Grid.Resources>
								<ControlTheme x:Key="Local" TargetType="c:Gauge" BasedOn="{StaticResource PowerLinearGaugeStyle}" />
							</Grid.Resources>

                            <TextBlock Grid.Row="0" FontSize="10" TextAlignment="Center" Text="{Binding SmartMeter.SerialNumber, FallbackValue='---'}" />
							<TextBlock Grid.Row="1" FontSize="10" TextAlignment="Center"
                                       Text="{Binding SmartMeter.DataTime, FallbackValue='', Converter={co:DateConverter}}" />

							<StackPanel Grid.Row="2" VerticalAlignment="Center">
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Frequency}"
                                               Value="{Binding SmartMeter.Frequency, FallbackValue=0, TargetNullValue=0}"
                                               StringFormat="N1"
                                               Minimum="49" Maximum="51"
                                               GaugeColors="{x:Static m:GaugeColors.MidIsGood}"
                                               UnitName="Hz" />
								<c:LinearGauge Theme="{DynamicResource Local}" Label="{x:Static p:Resources.Latency}" Origin="0"
                                               Value="{Binding SmartMeter.Latency.TotalMilliseconds, FallbackValue=0, TargetNullValue=0}"
                                               StringFormat="N0" Minimum="0" Maximum="2000" UnitName="ms"
                                               GaugeColors="{x:Static m:GaugeColors.HighIsBad}" />
							</StackPanel>
						</Grid>
					</Grid>
				</Border>
				<Viewbox Width="108" Grid.Row="2" StretchDirection="DownOnly" HorizontalAlignment="Center">
					<StackPanel Orientation="Horizontal">
						<RadioButton Classes="DeviceButton" IsChecked="True" Content="{x:Static p:Resources.Power}" Click="OnPowerClick" />
						<RadioButton Classes="DeviceButton" Content="{x:Static p:Resources.Voltage}" Click="OnVoltageClick" />
						<RadioButton Classes="DeviceButton" Content="{x:Static p:Resources.Current}" Click="OnCurrentClick" />
						<RadioButton Classes="DeviceButton" Content="{x:Static p:Resources.More}" Click="OnMoreClick" />
					</StackPanel>
				</Viewbox>

			</Grid>
		</Border>
	</Viewbox>
</c:DeviceControlBase>
