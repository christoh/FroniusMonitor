<local:DeviceControlBase xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:De.Hochstaetter.HomeAutomationClient.Controls"
             xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
             xmlns:gl="clr-namespace:System.Globalization;assembly=System.Runtime"
             xmlns:co="clr-namespace:De.Hochstaetter.HomeAutomationClient.Converters"
             mc:Ignorable="d" d:DesignWidth="110" d:DesignHeight="80"
             x:Class="De.Hochstaetter.HomeAutomationClient.Controls.PowerConsumer">
	<Viewbox DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:PowerConsumer}}">
		<Border BorderBrush="DimGray" BorderThickness="1" Width="110">
			<Grid x:Name="BackgroundProvider" Background="LightGray" RowDefinitions="Auto,Auto,Auto,Auto,Auto">

				<Grid.Styles>
					<Style Selector="Viewbox">
						<Setter Property="StretchDirection" Value="DownOnly" />
						<Setter Property="Margin" Value="4,0" />
					</Style>
				</Grid.Styles>
				<Viewbox Grid.Row="0">
					<TextBlock FontSize="8" TextAlignment="Center" Text="{Binding Path=Device.Model, FallbackValue='---'}" />
				</Viewbox>
				<Viewbox Grid.Row="1">
					<TextBlock FontSize="8" TextAlignment="Center" Text="{Binding Path=Device.DisplayName, FallbackValue=---}" />
				</Viewbox>

				<ToggleButton IsEnabled="{Binding Path=Device.IsSwitchingEnabled, FallbackValue={x:False}}"
                              IsVisible="{Binding Path=Device.CanSwitch, FallbackValue={x:True}}"
                              Classes="OnOff"
                              Click="OnPowerButtonClick" HorizontalAlignment="Center"
                              Grid.Row="2" Height="7" Margin="0,2,0,2"
                              IsChecked="{Binding Path=Device.IsTurnedOn, Mode=OneWay, FallbackValue={x:Null}}" />

				<Grid Grid.Row="3" ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto,Auto">

					<Grid.Resources>
						<x:Double x:Key="SliderHorizontalThumbWidth">4</x:Double>
						<x:Double x:Key="SliderHorizontalThumbHeight">9</x:Double>
						<GridLength x:Key="SliderPreContentMargin">2</GridLength>
						<GridLength x:Key="SliderPostContentMargin">0</GridLength>
						<x:Double x:Key="SliderHorizontalHeight">12</x:Double>
						<x:Double x:Key="SliderTrackThemeHeight">1.5</x:Double>
					</Grid.Resources>

					<Grid.Styles>
						<Style Selector="TextBlock">
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="HorizontalAlignment" Value="Left" />
							<Setter Property="FontSize" Value="7" />
							<Setter Property="Margin" Value="2,0" />
						</Style>

						<Style Selector="Slider.Default">
							<Setter Property="Margin" Value="2,0,0,0" />
							<Setter Property="TickPlacement" Value="None" />
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="IsSnapToTickEnabled" Value="False" />
							<Setter Property="VerticalAlignment" Value="Center" />
						</Style>
					</Grid.Styles>

					<TextBlock Grid.Row="0" Grid.Column="1"
                               IsVisible="{Binding Path=Device.CanDim, FallbackValue={x:True}}">
						<Run Text="B:" />
						<Run Text="{Binding Value, ElementName=DimSlider, Mode=OneWay, StringFormat=P0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
					</TextBlock>

					<Slider Classes="Default" Grid.Row="0" Grid.Column="0" x:Name="DimSlider" Minimum="0" Maximum="1"
                                             IsVisible="{Binding Path=Device.CanDim, FallbackValue={x:True}}"
                                             Value="{Binding Path=Device.Level, Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.IsDimmingEnabled, FallbackValue=False}"/>

					<TextBlock Grid.Row="1" Grid.Column="1" Opacity="{Binding Path=Device.IsColorTemperatureActive, Converter={co:Bool2Double False=.5, True=1}, FallbackValue=.5}"
                               IsVisible="{Binding Path=Device.HasColorTemperatureControl, FallbackValue={x:True}}">
						<Run Text="{Binding Value, ElementName=TemperatureSlider, Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
						<Run Text="K" />
					</TextBlock>

					<Slider Classes="Default" Grid.Row="1" Grid.Column="0" x:Name="TemperatureSlider"
                                             IsVisible="{Binding Path=Device.HasColorTemperatureControl, FallbackValue={x:True}}"
                                             Minimum="{Binding Path=Device.MinTemperatureKelvin, Mode=OneWay, FallbackValue=2700}"
                                             Maximum="{Binding Path=Device.MaxTemperatureKelvin, Mode=OneWay, FallbackValue=6500}"
                                             Value="{Binding Path=Device.ColorTemperatureKelvin, Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.IsColorTemperatureEnabled, FallbackValue=False}"/>

					<TextBlock Grid.Row="2" Grid.Column="1" Opacity="{Binding Path=Device.IsHsvActive, Converter={co:Bool2Double False=.5, True=1}, FallbackValue=.5}"
                               IsVisible="{Binding Path=Device.HasHsvColorControl, FallbackValue={x:True}}">
						<Run Text="H:" />
						<Run Text="{Binding Value, ElementName=HueSlider, Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
						<Run Text="Â°" />
					</TextBlock>

					<Slider Classes="Default" Grid.Row="2" Grid.Column="0" x:Name="HueSlider" Minimum="0" Maximum="360" TickFrequency="30"
                                             IsVisible="{Binding Path=Device.HasHsvColorControl, FallbackValue={x:True}}"
                                             Value="{Binding Path=Device.HueDegrees, Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.IsHsvEnabled, FallbackValue=False}">
						<Slider.Template>
							<!-- ReSharper disable Xaml.StaticResourceNotResolved -->
							<ControlTemplate TargetType="Slider">
								<DataValidationErrors>
									<Border
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="{TemplateBinding CornerRadius}">
										<Grid x:Name="SliderContainer"
											  Margin="{TemplateBinding Padding}"
											  Background="Transparent">
											<Grid.Styles>
												<Style Selector="TickBar">
													<!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
													<Setter Property="ReservedSpace" Value="{Binding #PART_Track.Thumb.Bounds}" />
												</Style>
											</Grid.Styles>
											<Grid
												x:Name="HorizontalTemplate"
												MinHeight="{DynamicResource SliderHorizontalHeight}"
												ColumnDefinitions="Auto,Auto,*">
												<Grid.RowDefinitions>
													<RowDefinition Height="{DynamicResource SliderPreContentMargin}" />
													<RowDefinition Height="Auto" />
													<RowDefinition Height="{DynamicResource SliderPostContentMargin}" />
												</Grid.RowDefinitions>
												<TickBar
													x:Name="TopTickBar"
													Grid.ColumnSpan="3"
													Ticks="{TemplateBinding Ticks}"
													TickFrequency="{TemplateBinding Slider.TickFrequency}"
													Orientation="{TemplateBinding Slider.Orientation}"
													Minimum="{TemplateBinding Slider.Minimum}"
													Maximum="{TemplateBinding Slider.Maximum}"
													Height="{DynamicResource SliderOutsideTickBarThemeHeight}"
													Margin="0,0,0,4"
													VerticalAlignment="Bottom"
													Placement="Top"
													IsVisible="False"
													Fill="{DynamicResource SliderTickBarFill}"/>
												<TickBar
													x:Name="BottomTickBar"
													Grid.Row="2"
													Grid.ColumnSpan="3" Grid.Column="0"
                                                    Ticks="{TemplateBinding Ticks}"
													TickFrequency="{TemplateBinding Slider.TickFrequency}"
													Orientation="{TemplateBinding Slider.Orientation}"
													Minimum="{TemplateBinding Slider.Minimum}"
													Maximum="{TemplateBinding Slider.Maximum}"
													Height="{DynamicResource SliderOutsideTickBarThemeHeight}"
													Margin="0,4,0,0"
													VerticalAlignment="Top"
													Placement="Bottom"
													IsVisible="False"
													Fill="{DynamicResource SliderTickBarFill}" />
												<Track
													x:Name="PART_Track"
													Grid.Row="1"
													Grid.ColumnSpan="3" Grid.Column="0"
                                                    Minimum="{TemplateBinding Minimum}"
													Maximum="{TemplateBinding Maximum}"
													Value="{TemplateBinding Value, Mode=TwoWay}"
													IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
													Orientation="Horizontal">
													<Track.DecreaseButton>
														<RepeatButton
															x:Name="PART_DecreaseButton"
															Theme="{StaticResource FluentSliderHorizontalRepeatButton}"
															Focusable="False"/>
													</Track.DecreaseButton>
													<Track.IncreaseButton>
														<RepeatButton
															x:Name="PART_IncreaseButton"
															Theme="{StaticResource FluentSliderHorizontalRepeatButton}"
															Focusable="False"/>
													</Track.IncreaseButton>
													<Thumb
														x:Name="thumb"
														Width="{DynamicResource SliderHorizontalThumbWidth}"
														Height="{DynamicResource SliderHorizontalThumbHeight}"
														Margin="0"
														Padding="0"
														Background="{DynamicResource SliderThumbBackground}"
														BorderThickness="0"
														Theme="{StaticResource FluentSliderThumbTheme}"
														DataContext="{TemplateBinding Value}"/>
												</Track>
												<Border Grid.Row="0" Grid.Column="0" Background="{x:Null}" ZIndex="-1" Height="{Binding Bounds.Height, ElementName=SliderContainer}" Width="{Binding Bounds.Width, ElementName=PART_Track}">
													<Border CornerRadius="{DynamicResource ControlCornerRadius}" Margin="0,11,0,0" Background="{DynamicResource SliderContainerBackground}" Height="{DynamicResource SliderTrackThemeHeight}"></Border>
												</Border>
											</Grid>
										</Grid>
									</Border>
								</DataValidationErrors>
							</ControlTemplate>
							<!-- ReSharper restore Xaml.StaticResourceNotResolved -->
						</Slider.Template>
						<Slider.Resources>
							<ControlTheme x:Key="FluentSliderHorizontalRepeatButton" TargetType="RepeatButton">
								<Setter Property="Template">
									<ControlTemplate>
										<Grid>
											<Border x:Name="FocusTarget" Margin="0,-10" Background="Transparent" />
											<Border x:Name="TrackBackground"
                                                    Background="Transparent"
                                                    CornerRadius="{DynamicResource ControlCornerRadius}"
                                                    Height="{DynamicResource SliderTrackThemeHeight}"
                                                    VerticalAlignment="Center"/>
										</Grid>
									</ControlTemplate>
								</Setter>
							</ControlTheme>

							<LinearGradientBrush x:Key="SliderContainerBackground">
								<GradientStop Color="Red" Offset="0" />
								<GradientStop Color="Yellow" Offset=".16667" />
								<GradientStop Color="#00ff00" Offset="0.3333" />
								<GradientStop Color="#00ffff" Offset="0.5" />
								<GradientStop Color="Blue" Offset=".666667" />
								<GradientStop Color="#ff00ff" Offset=".83333333333" />
								<GradientStop Color="Red" Offset="1" />
							</LinearGradientBrush>
						</Slider.Resources>
					</Slider>

					<TextBlock Grid.Row="3" Grid.Column="1" Opacity="{Binding Path=Device.IsHsvActive, Converter={co:Bool2Double False=.5, True=1}, FallbackValue=.5}"
                               IsVisible="{Binding Path=Device.HasHsvColorControl, FallbackValue={x:True}}">
						<Run Text="S:" />
						<Run Text="{Binding Value, ElementName=SaturationSlider, Mode=OneWay, StringFormat=P0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
					</TextBlock>

					<Slider Classes="Default" Grid.Row="3" Grid.Column="0" Minimum="0" Maximum="1" x:Name="SaturationSlider"
                                             IsVisible="{Binding Path=Device.HasHsvColorControl, FallbackValue={x:True}}"
                                             Value="{Binding Path=Device.Saturation, Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.IsHsvEnabled, FallbackValue=False}"/>


				</Grid>
				<Grid Grid.Row="3" ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto,Auto">

					<Grid.Styles>
						<Style Selector="TextBlock">
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="HorizontalAlignment" Value="Left" />
							<Setter Property="FontSize" Value="7" />
							<Setter Property="Margin" Value="2,7,2,0" />
						</Style>
					</Grid.Styles>

				</Grid>

				<Grid IsVisible="{Binding Path=Device.CanMeasurePower, FallbackValue={x:True}}" Grid.Row="4" Background="{DynamicResource Lcd}" Margin="4,2,4,4" RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*,Auto">
					<Grid.Styles>
						<Style Selector="TextBlock">
							<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
							<Setter Property="FontSize" Value="8" />
						</Style>
					</Grid.Styles>

					<TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.Power}" />
					<TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
						<Run Text="{Binding Path=Device.ActivePower, StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, TargetNullValue=---, Mode=OneWay, FallbackValue=---}" />
					</TextBlock>
					<TextBlock Grid.Row="0" Grid.Column="2" Text=" W" />

					<TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.Voltage}" />
					<TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right">
						<Run Text="{Binding Path=Device.Voltage, StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, TargetNullValue=---, Mode=OneWay, FallbackValue=---}" />
					</TextBlock>
					<TextBlock Grid.Row="1" Grid.Column="2" Text=" V" />

					<TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.Energy}" />
					<TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right">
						<Run Text="{Binding Path=Device.EnergyConsumed, Converter={co:Multiply Factor=.001}, StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, Mode=OneWay,TargetNullValue=---, FallbackValue=---}" />
					</TextBlock>
					<TextBlock Grid.Row="2" Grid.Column="2" Text=" kWh" />

					<TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static p:Resources.Temperature}" />
					<TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right">
						<Run Text="{Binding Path=Device.TemperatureCelsius, StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, Mode=OneWay,TargetNullValue=---, FallbackValue=---}" />
					</TextBlock>
					<TextBlock Grid.Row="3" Grid.Column="2" Text=" Â°C" />

				</Grid>
			</Grid>
		</Border>
	</Viewbox>
</local:DeviceControlBase>
