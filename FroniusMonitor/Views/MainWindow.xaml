<Window x:Class="De.Hochstaetter.FroniusMonitor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
        xmlns:gl="clr-namespace:System.Globalization;assembly=System.Globalization"
        mc:Ignorable="d"
        Title="{x:Static p:Resources.AppName}" Height="860" Width="1080"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
        xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
        xmlns:vi="clr-namespace:De.Hochstaetter.FroniusMonitor.Assets.Images"
        xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
        xmlns:models="clr-namespace:De.Hochstaetter.Fronius.Models;assembly=Fronius"
        xmlns:toshiba="clr-namespace:De.Hochstaetter.Fronius.Models.ToshibaAc;assembly=Fronius">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" x:Name="SolarSystemRow" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" x:Name="PowerConsumerRow"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Menu>
                <MenuItem Header="{x:Static p:Resources.Settings}">
                    <MenuItem Header="{x:Static p:Resources.AppSettings}" Click="ShowSettings" Icon="{vi:SettingsIcon}" />
                    <MenuItem Header="{x:Static p:Resources.Export}" Command="{Binding ExportSettingsCommand}" Icon="{vi:SettingsExportIcon}" />
                    <MenuItem Header="{x:Static p:Resources.Load}" Command="{Binding LoadSettingsCommand}" Icon="{vi:SettingsImportIcon}" />
                    <Separator />
                    <MenuItem Header="{x:Static p:Resources.ModbusSettings}" Click="ShowModbusSettings" Icon="{vi:ModbusLogo}" />
                    <MenuItem Header="{x:Static p:Resources.EnergyFlow}" Icon="{vi:EnergyFLow}" Click="ShowSelfConsumptionOptimization" />
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.View}">
                    <MenuItem Header="_Auto-fit" Click="OnAutoSizeChecked" />
                    <MenuItem Header="{x:Static p:Resources.IncludeInverterPower}" Icon="{vi:Gen24}" IsChecked="{Binding IncludeInverterPower}" IsCheckable="True" />
                    <MenuItem Header="{x:Static p:Resources.Events}" Click="ShowEventLog" Icon="{vi:EventLogIcon}" />
                    <MenuItem Visibility="{Binding Settings.HaveFritzBox, Converter={co:Bool2Visibility}}" Header="{x:Static p:Resources.ShowAvm}" IsChecked="{Binding Settings.ShowFritzBox, Mode=TwoWay}" IsCheckable="True" Icon="{vi:FritzLogo}" Checked="OnShowAvmChanged" Unchecked="OnShowAvmChanged" />
                    <MenuItem Visibility="{Binding Settings.HaveWattPilot, Converter={co:Bool2Visibility}}" Header="{x:Static p:Resources.WattPilotHeader}" IsChecked="{Binding Settings.ShowWattPilot, Mode=TwoWay}" IsCheckable="True" Icon="{vi:ChargingTrafficSign}" Checked="ShowWattPilot" Unchecked="ShowWattPilot" />
                </MenuItem>
                <MenuItem Header="Wattpilot" Visibility="{Binding SolarSystemService.SolarSystem.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}">
                    <MenuItem Header="{x:Static p:Resources.Settings}" Click="ShowWattPilotSettings" Icon="{vi:ChargingTrafficSignSettings}" Visibility="{Binding WattPilotService.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />
                    <MenuItem Header="{x:Static p:Resources.DownloadChargeLog}" Command="{Binding DownloadChargeLogCommand}" Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.DownloadLink, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
                    <MenuItem Header="{x:Static p:Resources.Reboot}" Command="{Binding RebootWattPilotCommand}" Visibility="{Binding WattPilotService.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />
                </MenuItem>
            </Menu>
            <ToggleButton IsChecked="True" x:Name="RibbonExpander" Grid.Column="1" Style="{StaticResource TransparentButton}" Background="{x:Static SystemColors.MenuBarBrush}" Checked="OnRibbonExpanderChanged" Unchecked="OnRibbonExpanderChanged">
                <vi:Chevron x:Name="Chevron" Angle="0" Width="8" Height="8" Margin="0,3,18,0" />
            </ToggleButton>
        </Grid>

        <StackPanel Grid.Row="1" Orientation="Horizontal" Background="{x:Static SystemColors.MenuBarBrush}">
            <StackPanel.LayoutTransform>
                <ScaleTransform x:Name="RibbonTransform" ScaleY="1" />
            </StackPanel.LayoutTransform>
            <StackPanel.Resources>
                <Style TargetType="MenuItem" BasedOn="{StaticResource RibbonButton}" />
            </StackPanel.Resources>
            <MenuItem Header="{x:Static p:Resources.Settings}" Click="ShowSettings" Icon="{vi:SettingsIcon}" />
            <MenuItem Header="{x:Static p:Resources.Modbus}" Click="ShowModbusSettings" Icon="{vi:ModbusLogo}" Visibility="{Binding SolarSystemService.SolarSystem.Gen24System, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
            <MenuItem Header="{x:Static p:Resources.EnergyFlow}" Icon="{vi:EnergyFLow}" Click="ShowSelfConsumptionOptimization" Visibility="{Binding SolarSystemService.SolarSystem.Gen24System, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
            <MenuItem Visibility="{Binding Settings.HaveFritzBox, Converter={co:Bool2Visibility}}" Header="{x:Static p:Resources.ShowAvm}" IsChecked="{Binding Settings.ShowFritzBox, Mode=TwoWay}" IsCheckable="True" Icon="{vi:FritzLogo}" Checked="OnShowAvmChanged" Unchecked="OnShowAvmChanged" />
            <MenuItem Header="Wattpilot" Click="ShowWattPilot" Icon="{vi:ChargingTrafficSign}" Visibility="{Binding Settings.HaveWattPilot, Converter={co:Bool2Visibility}, FallbackValue=Collapsed}" IsCheckable="True" IsChecked="{Binding Settings.ShowWattPilot}" />
            <MenuItem Header="{x:Static p:Resources.ToshibaAcHeader}" Icon="{vi:AcIcon}" IsCheckable="True" IsChecked="{Binding Settings.ShowToshibaAc, Mode=TwoWay}" Visibility="{Binding Settings.HaveToshibaAc, Converter={co:Bool2Visibility}, FallbackValue=Collapsed}" Checked="SaveSettings" Unchecked="SaveSettings" />
            <MenuItem Header="{x:Static p:Resources.Events}" Click="ShowEventLog" Icon="{vi:EventLogIcon}" Visibility="{Binding SolarSystemService.SolarSystem.Gen24System, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
            <MenuItem Header="{x:Static p:Resources.Settings}" Click="ShowWattPilotSettings" Icon="{vi:ChargingTrafficSignSettings}" Visibility="{Binding WattPilotService.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />
        </StackPanel>

        <Viewbox Grid.Row="2" Margin="16">
            <Grid Height="500">
                <Grid.RowDefinitions>
                    <RowDefinition Height="200" />
                    <RowDefinition Height="100" />
                    <RowDefinition Height="200" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.LayoutTransform>
                        <ScaleTransform x:Name="WattPilotTransform" ScaleX="0" ScaleY="{Binding ElementName=WattPilotTransform, Path=ScaleX}" />
                    </Grid.LayoutTransform>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Settings.ShowWattPilot}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="0" To="1" Duration="00:00:00.2" Storyboard.Target="{Binding Source={x:Reference WattPilotTransform}}" Storyboard.TargetProperty="ScaleX" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="1" To="0" Duration="00:00:00.2" Storyboard.Target="{Binding Source={x:Reference WattPilotTransform}}" Storyboard.TargetProperty="ScaleX" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <c:PowerFlowArrow Grid.Column="0" x:Name="WattPilotArrow" VerticalAlignment="Top" Fill="{Binding ElementName=LoadArrow, Path=Fill}" HasRightPlacement="False" DefaultsToOutgoing="False"
                                      Margin="25,0,10,0" Power="{Binding SolarSystemService.SolarSystem.WattPilot.PowerTotal, FallbackValue=0}" />
                    <c:WattPilotControl Grid.Column="1" Height="200" WattPilotService="{Binding WattPilotService}" />
                </Grid>

                <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Visibility="{Binding WattPilotService.WattPilot, FallbackValue=Collapsed, Converter={co:NullToVisibility}}">
                    <Grid.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding ScaleX, ElementName=WattPilotTransform}" ScaleY="{Binding ScaleY, ElementName=WattPilotTransform}" />
                    </Grid.LayoutTransform>

                    <c:PowerFlowArrow x:Name="CarArrow" Angle="-30" VerticalAlignment="Top" Fill="{Binding ElementName=LoadArrow, Path=Fill}" HasRightPlacement="True" DefaultsToOutgoing="False"
                                      Margin="0,0,50,0" HorizontalAlignment="Right"
                                      Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.PowerL1, FallbackValue=Collapsed, Converter={co:NullToVisibility}}">
                        <c:PowerFlowArrow.Power>
                            <MultiBinding Converter="{co:Sum}">
                                <Binding Path="WattPilotService.WattPilot.PowerL1" FallbackValue="0" />
                                <Binding Path="WattPilotService.WattPilot.PowerL2" FallbackValue="0" />
                                <Binding Path="WattPilotService.WattPilot.PowerL3" FallbackValue="0" />
                            </MultiBinding>
                        </c:PowerFlowArrow.Power>
                    </c:PowerFlowArrow>
                    <vi:Car Width="300" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Bottom" Status="{Binding SolarSystemService.SolarSystem.WattPilot.CarStatus, FallbackValue={x:Null}}"
                            Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.CableCurrentMaximum, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />

                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,75,164,0">
                        <TextBlock FontSize="14" FontWeight="Medium" TextAlignment="Center" Margin="0" Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.CableCurrentMaximum, FallbackValue=Collapsed, Converter={co:NullToVisibility}}">
                            <Run Text="{Binding SolarSystemService.SolarSystem.WattPilot.CableCurrentMaximum, FallbackValue='-',Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                            <Run Text="A" />
                        </TextBlock>
                        <vi:Typ2 Width="85" Margin="0,0,0,0" WattPilot="{Binding SolarSystemService.SolarSystem.WattPilot, FallbackValue={x:Null}}"
                                 Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.CableCurrentMaximum, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />

                    </StackPanel>
                    <TextBlock Opacity="{Binding SolarSystemService.SolarSystem.WattPilot.CarStatus, Converter={co:CarStatus2Opacity}, FallbackValue=.5}"
                               FontSize="16" FontWeight="Medium" TextAlignment="Center" Margin="100,190,0,0"
                               Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.EnergyCurrentSession, FallbackValue=Collapsed, Converter={co:NullToVisibility}}">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="-1.2" />
                        </TextBlock.LayoutTransform>
                        <Run Text="{Binding SolarSystemService.SolarSystem.WattPilot.EnergyCurrentSession, FallbackValue='-',Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                        <Run Text="Wh" />
                    </TextBlock>

                    <TextBlock Margin="130,177,0,0" Width="113" TextAlignment="Center" FontSize="14" FontWeight="Medium" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left"
                               Text="{Binding SolarSystemService.SolarSystem.WattPilot.CurrentUser,FallbackValue=''}">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="-1.2" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>


                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
                        <vi:SolarPanel Width="80" Foreground="#004000" VerticalAlignment="Top" Margin="0,10,0,0" />

                        <c:PowerFlowArrow VerticalAlignment="Top" Fill="#ffd000" Margin="15,0"
                                          Power="{Binding SolarSystemService.SolarSystem.Gen24System.PowerFlow.SolarPower, FallbackValue={x:Null}}" />

                        <c:InverterControl Height="200" Inverter="{Binding SolarSystemService.SolarSystem.PrimaryInverter, FallbackValue={x:Null}}" Versions="{Binding SolarSystemService.SolarSystem.Versions, FallbackValue={x:Null}}" />

                        <c:PowerFlowArrow x:Name="LoadArrow" VerticalAlignment="Top" Fill="LightGray" HasRightPlacement="True" DefaultsToOutgoing="True"
                                          Margin="25,0,10,0">
                            <c:PowerFlowArrow.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static p:Resources.IncludeInverterPower}" IsChecked="{Binding IncludeInverterPower}" IsCheckable="True" />
                                </ContextMenu>
                            </c:PowerFlowArrow.ContextMenu>
                        </c:PowerFlowArrow>

                        <vi:House Width="80" Foreground="Black" VerticalAlignment="Top" Margin="0,15,0,0" />
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Grid.Column="0">
                    <StackPanel Orientation="Horizontal" Margin="100,-40,0,0">

                        <c:PowerFlowArrow Angle="-30" Fill="LightGray"
                                          Power="{Binding SolarSystemService.SolarSystem.Gen24System.PowerFlow.GridPower, FallbackValue={x:Null}}" />

                        <c:PowerFlowArrow Angle="30" Margin="200,0,0,0" Fill="LightGreen" HasRightPlacement="True"
                                          Power="{Binding SolarSystemService.SolarSystem.Gen24System.PowerFlow.StoragePower, FallbackValue={x:Null}}"
                                          Visibility="{Binding SolarSystemService.SolarSystem.Gen24System.Storage, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />

                    </StackPanel>
                </Grid>

                <Grid Grid.Column="0" Grid.Row="2" x:Name="LowerGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <c:PowerMeterClassic Height="200" HorizontalAlignment="Left" Grid.Column="0"
                                         SmartMeter="{Binding SolarSystemService.SolarSystem.Gen24System.PrimaryPowerMeter, FallbackValue={x:Null}}" />

                    <c:SmartMeterControl Height="200" HorizontalAlignment="Left" Grid.Column="1" Margin="10,0,0,0"
                                         SmartMeter="{Binding SolarSystemService.SolarSystem.Gen24System.PrimaryPowerMeter, FallbackValue={x:Null}}" />

                    <c:StorageControl Height="200" Grid.Column="2" DockPanel.Dock="Right" Margin="150,0,0,0"
                                      Gen24="{Binding SolarSystemService.SolarSystem.Gen24System, FallbackValue={x:Null}}"
                                      Visibility="{Binding SolarSystemService.SolarSystem.Gen24System.Storage, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />
                </Grid>
            </Grid>
        </Viewbox>

        <GridSplitter Grid.Row="3" Height="10" Grid.Column="0" ResizeBehavior="PreviousAndNext" BorderThickness="2" ResizeDirection="Rows"
                      BorderBrush="LightGray" Margin="0" HorizontalAlignment="Stretch" MaxHeight="5" />

        <ScrollViewer x:Name="ScrollViewer" Grid.Row="4"
                      VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto"
                      VerticalContentAlignment="Top" HorizontalContentAlignment="Stretch"
                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                      Visibility="{Binding Settings.FritzBoxConnection, Converter={co:ShowFritzBoxIcon}}">
            <ItemsControl Margin="10,10,0,0" ItemsSource="{Binding SolarSystemService.SwitchableDevices, FallbackValue={x:Null}}">
                <ItemsControl.LayoutTransform>
                    <ScaleTransform x:Name="ConsumerScaler" ScaleX="1" ScaleY="1" />
                </ItemsControl.LayoutTransform>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Vertical" IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Resources>
                    <DataTemplate DataType="{x:Type models:FritzBoxDevice}">
                        <c:PowerConsumer Width="150" Device="{Binding}" Margin="0,0,8,8"
                                         Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}, Path=DataContext.Settings.ShowFritzBox, Converter={co:Bool2Visibility}}" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type toshiba:ToshibaAcMappingDevice}">
                        <c:ToshibaHvacControl Width="150" Device="{Binding}" Margin="0,0,8,8"
                                              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}, Path=DataContext.Settings.ShowToshibaAc, Converter={co:Bool2Visibility}}" />
                    </DataTemplate>
                </ItemsControl.Resources>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</Window>