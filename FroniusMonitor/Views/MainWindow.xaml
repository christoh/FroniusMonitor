<c:ScalableWindow x:Class="De.Hochstaetter.FroniusMonitor.Views.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
                  xmlns:gl="clr-namespace:System.Globalization;assembly=System.Globalization"
                  mc:Ignorable="d"
                  Title="{x:Static p:Resources.AppName}" Height="860" Width="1080"
                  d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
                  xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
                  xmlns:vi="clr-namespace:De.Hochstaetter.FroniusMonitor.Assets.Images"
                  xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
                  xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
                  xmlns:models="clr-namespace:De.Hochstaetter.Fronius.Models;assembly=Fronius"
                  xmlns:toshiba="clr-namespace:De.Hochstaetter.Fronius.Models.ToshibaAc;assembly=Fronius">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" x:Name="SolarSystemRow" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{Binding Settings.ControllerGridRowHeight, Mode=OneWay}" x:Name="PowerConsumerRow" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Menu>
                <MenuItem Header="{x:Static p:Resources.Settings}">
                    <MenuItem Header="{x:Static p:Resources.AppSettings}" Click="ShowSettings" Icon="{vi:SettingsIcon}" />
                    <MenuItem Header="{x:Static p:Resources.Export}" Command="{Binding ExportSettingsCommand}" Icon="{vi:SettingsExportIcon}" />
                    <MenuItem Header="{x:Static p:Resources.Load}" Command="{Binding LoadSettingsCommand}" Icon="{vi:SettingsImportIcon}" />
                    <Separator />
                    <MenuItem Header="{x:Static p:Resources.ModbusSettings}" Click="ShowModbusSettings" Icon="{vi:ModbusLogo}" />
                    <MenuItem Header="{x:Static p:Resources.EnergyFlow}" Icon="{vi:EnergyFLow}" Click="ShowSelfConsumptionOptimization" />
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.View}">
                    <MenuItem Header="_Auto-fit" Click="OnAutoSizeChecked" />
                    <MenuItem Header="{x:Static p:Resources.IncludeInverterPower}" Icon="{vi:Gen24}" IsChecked="{Binding IncludeInverterPower}" IsCheckable="True" />
                    <MenuItem Header="{x:Static p:Resources.Events}" Click="ShowEventLog" Icon="{vi:EventLogIcon}" />
                    <MenuItem Header="{x:Static p:Resources.ColorAllGaugeTicks}" IsCheckable="True" IsChecked="{Binding Settings.ColorAllGaugeTicks}" Checked="SaveSettings" Unchecked="SaveSettings" Icon="{c:DemoGauge}" />
                    <MenuItem Visibility="{Binding Settings.HaveFritzBox, Converter={co:Bool2Visibility}}" Header="{x:Static p:Resources.ShowAvm}" IsChecked="{Binding Settings.ShowFritzBox, Mode=TwoWay}" IsCheckable="True" Icon="{vi:FritzLogo}" Checked="OnShowAvmChanged" Unchecked="OnShowAvmChanged" />
                    <MenuItem Visibility="{Binding Settings.HaveWattPilot, Converter={co:Bool2Visibility}}" Header="{x:Static p:Resources.WattPilotHeader}" IsChecked="{Binding Settings.ShowWattPilot, Mode=TwoWay}" IsCheckable="True" Icon="{vi:ChargingTrafficSign}" Checked="ShowWattPilot" Unchecked="ShowWattPilot" />
                    <MenuItem Header="Show Prices" Click="MenuItem_OnClick"/> 
                </MenuItem>
                <MenuItem Header="Wattpilot" Visibility="{Binding DataCollectionService.HomeAutomationSystem.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}">
                    <MenuItem Header="{x:Static p:Resources.Settings}" Click="ShowWattPilotSettings" Icon="{vi:ChargingTrafficSignSettings}" Visibility="{Binding WattPilotService.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />
                    <MenuItem Header="{x:Static p:Resources.OpenChargingLog}" Icon="{vi:EventLogIcon}" Command="{Binding DownloadChargeLogCommand}" Visibility="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.DownloadLink, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
                    <MenuItem Header="{x:Static p:Resources.Reboot}" Icon="{vi:RebootIcon}" Visibility="{Binding WattPilotService.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" Click="OnRebootWattPilotClicked" />
                </MenuItem>
                <MenuItem Header="Tools">
                    <MenuItem Header="{x:Static p:Resources.ImportBayernwerk}" Command="{Binding ImportBayernwerkCommand}" Icon="{vi:BayernwerkLogo}" />
                    <MenuItem Header="Garbage Collection" Command="{Binding GarbageCollectionCommand}" />
                </MenuItem>

            </Menu>
            <ToggleButton x:Name="RibbonExpander" Grid.Column="1" Style="{StaticResource TransparentButton}" Background="{x:Static SystemColors.MenuBarBrush}" Checked="OnRibbonExpanderChanged" Unchecked="OnRibbonExpanderChanged">
                <vi:Chevron x:Name="Chevron" Angle="0" Width="8" Height="8" Margin="0,3,18,0" />
            </ToggleButton>
        </Grid>

        <StackPanel Grid.Row="1" Orientation="Horizontal" Background="{x:Static SystemColors.MenuBarBrush}">
            <StackPanel.LayoutTransform>
                <ScaleTransform x:Name="RibbonTransform" />
            </StackPanel.LayoutTransform>
            <StackPanel.Resources>
                <Style TargetType="MenuItem" BasedOn="{StaticResource RibbonButton}" />
            </StackPanel.Resources>
            <MenuItem Header="{x:Static p:Resources.Settings}" Click="ShowSettings" Icon="{vi:SettingsIcon}" />
            <MenuItem Header="{x:Static p:Resources.Modbus}" Click="ShowModbusSettings" Icon="{vi:ModbusLogo}" Visibility="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
            <MenuItem Header="{x:Static p:Resources.EnergyFlow}" Icon="{vi:EnergyFLow}" Click="ShowSelfConsumptionOptimization" Visibility="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
            <MenuItem Visibility="{Binding Settings.HaveFritzBox, Converter={co:Bool2Visibility}}" Header="{x:Static p:Resources.ShowAvm}" IsChecked="{Binding Settings.ShowFritzBox, Mode=TwoWay}" IsCheckable="True" Icon="{vi:FritzLogo}" Checked="OnShowAvmChanged" Unchecked="OnShowAvmChanged" />
            <MenuItem Header="Wattpilot" Click="ShowWattPilot" Icon="{vi:ChargingTrafficSign}" Visibility="{Binding Settings.HaveWattPilot, Converter={co:Bool2Visibility}, FallbackValue=Collapsed}" IsCheckable="True" IsChecked="{Binding Settings.ShowWattPilot}" />
            <MenuItem Header="{x:Static p:Resources.ToshibaAcHeader}" Icon="{vi:AcIcon}" IsCheckable="True" IsChecked="{Binding Settings.ShowToshibaAc, Mode=TwoWay}" Visibility="{Binding Settings.HaveToshibaAc, Converter={co:Bool2Visibility}, FallbackValue=Collapsed}" Checked="SaveSettings" Unchecked="SaveSettings" />
            <MenuItem Header="{x:Static p:Resources.Events}" Click="ShowEventLog" Icon="{vi:EventLogIcon}" Visibility="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />
            <MenuItem Header="{x:Static p:Resources.Settings}" Click="ShowWattPilotSettings" Icon="{vi:ChargingTrafficSignSettings}" Visibility="{Binding WattPilotService.WattPilot, Converter={co:NullToVisibility}, FallbackValue=Collapsed}" />
        </StackPanel>

        <Viewbox Grid.Row="2" Margin="16">
            <Grid Height="500">
                <Grid.RowDefinitions>
                    <RowDefinition Height="200" />
                    <RowDefinition Height="100" />
                    <RowDefinition Height="200" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>


                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
                        <StackPanel Orientation="Vertical">
                            <c:SolarPanels x:Name="FirstPanel" Tracker="Inverter1Mppt1" Width="105" VerticalAlignment="Center"
                                           WattPeak="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config.InverterSettings.Mppt.Mppt1.WattPeak, FallbackValue=0, TargetNullValue=0}" Margin="0,0,0,0" />
                            <c:SolarPanels Tracker="Inverter1Mppt2" Width="{Binding ElementName=FirstPanel, Path=Width}"
                                           WattPeak="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config.InverterSettings.Mppt.Mppt2.WattPeak, FallbackValue=0, TargetNullValue=0}" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </StackPanel>

                        <StackPanel Orientation="Vertical">
                            <c:PowerFlowArrow VerticalAlignment="Top" Fill="#ffd000" Margin="15,0"
                                              Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.Inverter.Solar1Power, FallbackValue={x:Null}}" />
                            <c:PowerFlowArrow VerticalAlignment="Top" Fill="#ffd000" Margin="15,0"
                                              Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.Inverter.Solar2Power, FallbackValue={x:Null}}" />
                        </StackPanel>
                        <c:InverterControl Height="200" Versions="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config.Versions, FallbackValue={x:Null}}"
                                           Sensors="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors, FallbackValue={x:Null}}"
                                           Config="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config, FallbackValue={x:Null}}" />
                        <c:PowerFlowArrow VerticalAlignment="Top" Fill="#ffd000" HasRightPlacement="True" x:Name="LoadArrowPrimaryInverter" Margin="15,0"
                                          Visibility="{Binding Settings.HaveTwoInverters, FallbackValue=Collapsed, Converter={co:Bool2Visibility}}" IsAc="True"
                                          Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.PowerFlow.LoadPower, FallbackValue={x:Null}}" />
                        <c:InverterControl Height="200" Versions="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config2.Versions, FallbackValue={x:Null}}" IsSecondary="True"
                                           Sensors="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors2, FallbackValue={x:Null}}"
                                           Config="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config2, FallbackValue={x:Null}}"
                                           Visibility="{Binding Settings.HaveTwoInverters, FallbackValue=Collapsed, Converter={co:Bool2Visibility}}" />

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding Settings.HaveTwoInverters, FallbackValue=Collapsed, Converter={co:Bool2Visibility}}">
                            <StackPanel Orientation="Vertical">
                                <c:PowerFlowArrow VerticalAlignment="Top" Fill="#ffd000" Margin="15,0" HasRightPlacement="True"
                                                  Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors2.Inverter.Solar1Power, FallbackValue={x:Null}}" />
                                <c:PowerFlowArrow VerticalAlignment="Top" Fill="#ffd000" Margin="15,0" HasRightPlacement="True"
                                                  Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors2.Inverter.Solar2Power, FallbackValue={x:Null}}" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <c:SolarPanels WattPeak="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config2.InverterSettings.Mppt.Mppt1.WattPeak, FallbackValue=0, TargetNullValue=0}"
                                               Tracker="Inverter2Mppt1" Width="{Binding ElementName=FirstPanel, Path=Width}" VerticalAlignment="Center" Margin="0,0,0,0" />
                                <c:SolarPanels WattPeak="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config2.InverterSettings.Mppt.Mppt2.WattPeak, FallbackValue=0, TargetNullValue=0}"
                                               Tracker="Inverter2Mppt2" Width="{Binding ElementName=FirstPanel, Path=Width}" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </StackPanel>

                        </StackPanel>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Grid.Column="0">
                    <StackPanel Orientation="Horizontal" Margin="120,-40,0,0">

                        <c:PowerFlowArrow Angle="-30" Fill="LightGray" IsAc="True"
                                          Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.PowerFlow.GridPowerCorrected, FallbackValue={x:Null}}" />

                        <c:PowerFlowArrow Angle="30" Margin="80,0,0,0" Fill="LightGreen" HasRightPlacement="True"
                                          Power="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.PowerFlow.StoragePower, FallbackValue={x:Null}}"
                                          Visibility="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.Storage, Converter={co:NullToVisibility Null=Hidden}, FallbackValue=Hidden}" />

                        <c:PowerFlowArrow x:Name="LoadArrow" Fill="LightGray" DefaultsToOutgoing="True" IsAc="True"
                                          HasRightPlacement="{Binding Settings.HaveTwoInverters, FallbackValue=Collapsed, Converter={co:BoolInverter}}"
                                          Margin="{Binding Settings.HaveTwoInverters, Converter={co:Bool2Thickness True='180,0,0,0', False='15,0,0,0'}, FallbackValue='15,0,0,0'}"
                                          Angle="{Binding Settings.HaveTwoInverters, Converter={co:Bool2Double False=30, True=-30}, FallbackValue=30}">
                            <c:PowerFlowArrow.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static p:Resources.IncludeInverterPower}" IsChecked="{Binding IncludeInverterPower}" IsCheckable="True" />
                                </ContextMenu>
                            </c:PowerFlowArrow.ContextMenu>
                        </c:PowerFlowArrow>

                        <StackPanel Orientation="Horizontal" Visibility="{Binding WattPilotService.WattPilot, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" Margin="0,0,0,0">
                            <StackPanel.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding ScaleX, ElementName=WattPilotTransform}" ScaleY="{Binding ScaleY, ElementName=WattPilotTransform}" />
                            </StackPanel.LayoutTransform>
                            <!--<c:PowerFlowArrow x:Name="CarArrow" Angle="0" Fill="{Binding ElementName=LoadArrow, Path=Fill}" HasRightPlacement="True" DefaultsToOutgoing="False"
                                          Margin="0,0,0,0" HorizontalAlignment="Right" IsAc="True"
                                          Visibility="{Binding SolarSystemService.SolarSystem.WattPilot.PowerL1, FallbackValue=Collapsed, Converter={co:NullToVisibility}}">
                                <c:PowerFlowArrow.Power>
                                    <MultiBinding Converter="{co:Sum}">
                                        <Binding Path="WattPilotService.WattPilot.PowerL1" FallbackValue="0" />
                                        <Binding Path="WattPilotService.WattPilot.PowerL2" FallbackValue="0" />
                                        <Binding Path="WattPilotService.WattPilot.PowerL3" FallbackValue="0" />
                                    </MultiBinding>
                                </c:PowerFlowArrow.Power>
                            </c:PowerFlowArrow>-->
                        </StackPanel>

                        <Grid Margin="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors2, Converter={co:NullToThickness NotNull='72,0,0,0', Null='235,0,0,0'}, FallbackValue='235,0,0,0'}"
                              Visibility="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CableCurrentMaximum, FallbackValue=Hidden, Converter={co:NullToVisibility Null=Hidden}}">
                            <Grid.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding ScaleX, ElementName=WattPilotTransform}" ScaleY="{Binding ScaleY, ElementName=WattPilotTransform}" />
                            </Grid.LayoutTransform>

                            <vi:Car Width="150" HorizontalAlignment="Right" Margin="0,0,0,10" VerticalAlignment="Bottom"
                                    Status="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CarStatus, FallbackValue={x:Null}}"
                                    EnergyWatts="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.EnergyCurrentSession, FallbackValue=0}"
                                    CurrentUser="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CurrentUser, FallbackValue=''}" />
                        </Grid>

                        <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10,0,0,10">
                            <StackPanel.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding ScaleX, ElementName=WattPilotTransform}" ScaleY="{Binding ScaleY, ElementName=WattPilotTransform}" />
                            </StackPanel.LayoutTransform>

                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Visibility="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CableCurrentMaximum, FallbackValue=Collapsed, Converter={co:NullToVisibility}}">
                                <TextBlock FontSize="14" FontWeight="Medium" TextAlignment="Center" Margin="0">
                                    <Run Text="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CableCurrentMaximum, FallbackValue='-',Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                                    <Run Text="A" />
                                </TextBlock>

                                <c:WattPilotPadLock Margin="4,0,0,0" CableLockStatus="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CableLockStatus, FallbackValue=Unknown}" Height="16"/>
                            </StackPanel>
                            <vi:Typ2 Width="60" Margin="0,0,0,0" WattPilot="{Binding DataCollectionService.HomeAutomationSystem.WattPilot, FallbackValue={x:Null}}"
                                     Visibility="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.CableCurrentMaximum, FallbackValue=Collapsed, Converter={co:NullToVisibility}}" />

                        </StackPanel>
                    </StackPanel>
                </Grid>

                <Grid Grid.Column="0" Grid.Row="2" x:Name="LowerGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <c:PowerMeterClassic Height="200" HorizontalAlignment="Left" Grid.Column="0"
                                         SmartMeter="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.PrimaryPowerMeter, FallbackValue={x:Null}}" />

                    <c:SmartMeterControl Height="200" HorizontalAlignment="Left" Grid.Column="1" Margin="10,0,0,0"
                                         MeterStatus="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.MeterStatus, FallbackValue={x:Null}}"
                                         SmartMeter="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.PrimaryPowerMeter, FallbackValue={x:Null}}"
                                         Gen24Config="{Binding DataCollectionService.HomeAutomationSystem.Gen24Config, FallbackValue={x:Null}}" />

                    <c:StorageControl Height="200" Grid.Column="2" Margin="8,0,0,0" HomeAutomationSystem="{Binding DataCollectionService.HomeAutomationSystem}"
                                      Gen24Sensors="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors, FallbackValue={x:Null}}"
                                      Visibility="{Binding DataCollectionService.HomeAutomationSystem.Gen24Sensors.Storage, Converter={co:NullToVisibility Null=Hidden}, FallbackValue=Hidden}" />
                    <c:House Grid.Column="3" Width="240" Foreground="Black" VerticalAlignment="Bottom" Margin="10,0,0,3"
                             PowerLossWatts="{Binding DataCollectionService.HomeAutomationSystem.SitePowerFlow.PowerLoss, FallbackValue={x:Null}}"
                             Efficiency="{Binding DataCollectionService.HomeAutomationSystem.SitePowerFlow.Efficiency, FallbackValue={x:Null}}"
                             ProductionWatts="{Binding DataCollectionService.HomeAutomationSystem.SitePowerFlow.SolarPower, FallbackValue={x:Null}}">
                        <c:House.ConsumptionWatts>
                            <MultiBinding Converter="{co:HouseConsumptionConverter}">
                                <Binding Path="DataCollectionService.HomeAutomationSystem.SitePowerFlow.LoadPowerCorrected" FallbackValue="{x:Null}" />
                                <Binding Path="DataCollectionService.HomeAutomationSystem.WattPilot.PowerTotal" FallbackValue="{x:Null}" />
                                <Binding Path="DataCollectionService.HomeAutomationSystem.SitePowerFlow.PowerLoss" FallbackValue="{x:Null}" />
                                <Binding Path="Settings.AddInverterPowerToConsumption" FallbackValue="{x:Null}" />
                            </MultiBinding>
                        </c:House.ConsumptionWatts>
                    </c:House>
                    <c:PowerFlowArrow Grid.Column="4" x:Name="WattPilotArrow" Fill="{Binding ElementName=LoadArrow, Path=Fill}" HasRightPlacement="False" DefaultsToOutgoing="False"
                                      Margin="-10,30,0,0" Power="{Binding DataCollectionService.HomeAutomationSystem.WattPilot.PowerTotal, FallbackValue=0}" IsAc="True">
                        <c:PowerFlowArrow.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding ElementName=WattPilotTransform, Path=ScaleX}" ScaleY="{Binding ElementName=WattPilotTransform, Path=ScaleY}" />
                        </c:PowerFlowArrow.LayoutTransform>
                    </c:PowerFlowArrow>

                    <Grid Margin="15,0,0,0" Grid.Column="5">
                        <Grid.LayoutTransform>
                            <ScaleTransform x:Name="WattPilotTransform" ScaleX="0" ScaleY="{Binding ElementName=WattPilotTransform, Path=ScaleX}" />
                        </Grid.LayoutTransform>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Settings.ShowWattPilot}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="1" Duration="00:00:00.2" Storyboard.Target="{Binding Source={x:Reference WattPilotTransform}}" Storyboard.TargetProperty="ScaleX" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="1" To="0" Duration="00:00:00.2" Storyboard.Target="{Binding Source={x:Reference WattPilotTransform}}" Storyboard.TargetProperty="ScaleX" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <c:WattPilotControl Height="200" WattPilotService="{Binding WattPilotService}" HomeAutomationSystem="{Binding DataCollectionService.HomeAutomationSystem}" />
                    </Grid>

                </Grid>
            </Grid>
        </Viewbox>

        <GridSplitter Grid.Row="3" Height="10" Grid.Column="0" ResizeBehavior="PreviousAndNext" BorderThickness="2" ResizeDirection="Rows"
                      BorderBrush="LightGray" Margin="0" HorizontalAlignment="Stretch" MaxHeight="5" />

        <ScrollViewer x:Name="ScrollViewer" Grid.Row="4" CanContentScroll="False"
                      VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto"
                      VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SizeChanged="OnControllerGridRowHeightChanged"
                      Visibility="{Binding Settings.FritzBoxConnection, Converter={co:ShowFritzBoxIcon}}">
            <ItemsControl Margin="10,10,0,0" ItemsSource="{Binding DataCollectionService.SwitchableDevices, FallbackValue={x:Null}}">
                <ItemsControl.LayoutTransform>
                    <ScaleTransform x:Name="ConsumerScaler" ScaleX="1" ScaleY="1" />
                </ItemsControl.LayoutTransform>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Vertical" IsItemsHost="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Resources>
                    <DataTemplate DataType="{x:Type models:FritzBoxDevice}">
                        <c:PowerConsumer Width="150" Device="{Binding}" Margin="0,0,8,8"
                                         Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}, Path=DataContext.Settings.ShowFritzBox, Converter={co:Bool2Visibility}}" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type toshiba:ToshibaHvacMappingDevice}">
                        <c:ToshibaHvacControl Width="150" Device="{Binding}" Margin="0,0,8,8"
                                              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}, Path=DataContext.Settings.ShowToshibaAc, Converter={co:Bool2Visibility}}" />
                    </DataTemplate>
                </ItemsControl.Resources>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</c:ScalableWindow>