<Window x:Class="De.Hochstaetter.FroniusMonitor.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
        xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
        xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
        xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
        mc:Ignorable="d"
        MinWidth="480" SizeToContent="WidthAndHeight" ResizeMode="CanMinimize"
        d:DataContext="{d:DesignInstance Type={x:Type vm:SettingsViewModel}}"
        Title="{x:Static p:Resources.Settings}">
    <StackPanel Margin="16">
        <StackPanel.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="0,0,8,0" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="70" />
                <Setter Property="Padding" Value="8,0" />
            </Style>

            <DataTemplate x:Key="ComboBoxTemplate">
                <TextBlock Text="{Binding}" MinHeight="20" Margin="0,2,0,0" VerticalAlignment="Center" />
            </DataTemplate>

            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="c:PasswordBox">
                <Setter Property="MinHeight" Value="22" />
                <Setter Property="Margin" Value="0,8,0,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Margin" Value="0,8,0,0" />
                <Setter Property="MinHeight" Value="22" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0,8,0,0" />
                <Setter Property="MinHeight" Value="22" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
        </StackPanel.Resources>

        <GroupBox Header="{x:Static p:Resources.Language}">
            <ComboBox Margin="8" ItemsSource="{Binding Cultures}" SelectedItem="{Binding SelectedCulture}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" MinHeight="20" Margin="0,2,0,0" VerticalAlignment="Center" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </GroupBox>


        <GroupBox Margin="0,8,0,0" Header="{x:Static p:Resources.Gen24InverterHeader}">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.Url}" Margin="0,8,0,0" />
                <TextBlock Grid.Row="0" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                <TextBox Grid.Row="0" Grid.Column="2"
                         Text="{Binding Settings.FroniusConnection.BaseUrl, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.Username}" Margin="0,7,0,0" />
                <TextBlock Grid.Row="1" Grid.Column="1" Text=":" Margin="4,7,4,0" />

                <ComboBox Grid.Row="1" Grid.Column="2"
                          SelectedItem="{Binding Settings.FroniusConnection.UserName, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Gen24UserNames}" ItemTemplate="{StaticResource ComboBoxTemplate}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.Password}" Margin="0,8,0,0" />
                <TextBlock Grid.Row="2" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                <c:PasswordBox Grid.Row="2" Grid.Column="2" Template="{StaticResource PasswordBoxTemplate}"
                               Password="{Binding Settings.FroniusConnection.Password, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static p:Resources.UpdateRate}" Margin="0,8,0,0"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Text=":" Margin="4,8,4,0"/>

                <Grid  Grid.Row="3" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="0" SelectedItem="{Binding Settings.FroniusUpdateRate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              ItemsSource="{Binding FroniusUpdateRates}" ItemTemplate="{StaticResource ComboBoxTemplate}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Settings.FroniusUpdateRate, Converter={co:ByteEqualityToString Value=1, Equal={x:Static p:Resources.Second}, NotEqual={x:Static p:Resources.Seconds}}}" Margin="4,8,0,0"/>
                </Grid>
            </Grid>

        </GroupBox>

        <GroupBox Margin="0,8,0,0" Header="{x:Static p:Resources.WattPilotHeader}">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <CheckBox IsChecked="{Binding Settings.HaveWattPilot}" Grid.Row="0" Content="{x:Static p:Resources.ControlWattPilot}" Margin="0,4,0,8" />

                <Grid Grid.Row="1" Visibility="{Binding Settings.HaveWattPilot, Converter={co:Bool2Visibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.Url}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding Settings.WattPilotConnection.BaseUrl, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.Password}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <c:PasswordBox Grid.Row="1" Grid.Column="2" Template="{StaticResource PasswordBoxTemplate}"
                                   Password="{Binding Settings.WattPilotConnection.Password, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Grid>
        </GroupBox>


        <GroupBox Margin="0,8,0,0" Header="{x:Static p:Resources.FritzBoxHeader}">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <CheckBox IsChecked="{Binding Settings.HaveFritzBox}" Grid.Row="0" Content="{x:Static p:Resources.EnableFritzBox}" Margin="0,4,0,8" />

                <Grid Grid.Row="1" Visibility="{Binding Settings.HaveFritzBox, Converter={co:Bool2Visibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.Url}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <TextBox Grid.Row="0" Grid.Column="2"
                             Text="{Binding Settings.FritzBoxConnection.BaseUrl, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.Username}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Settings.FritzBoxConnection.UserName, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.Password}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <c:PasswordBox Grid.Row="2" Grid.Column="2" Template="{StaticResource PasswordBoxTemplate}"
                                   Password="{Binding Settings.FritzBoxConnection.Password, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Margin="0,8,0,0" Header="{x:Static p:Resources.ToshibaAcHeader}">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <CheckBox IsChecked="{Binding Settings.HaveToshibaAc}" Grid.Row="0" Content="{x:Static p:Resources.EnableToshibaAc}" Margin="0,4,0,8" />

                <Grid Grid.Row="1" Visibility="{Binding Settings.HaveToshibaAc, Converter={co:Bool2Visibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.Url}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <TextBox Grid.Row="0" Grid.Column="2"
                             Text="{Binding Settings.ToshibaAcConnection.BaseUrl, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.Username}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Settings.ToshibaAcConnection.UserName, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.Password}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Text=":" Margin="4,8,4,0" />

                    <c:PasswordBox Grid.Row="2" Grid.Column="2" Template="{StaticResource PasswordBoxTemplate}"
                                   Password="{Binding Settings.ToshibaAcConnection.Password, FallbackValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static p:Resources.UpdateRate}" Margin="0,8,0,0" />
                    <TextBlock Grid.Row="3" Grid.Column="1" Text=":" Margin="4,8,4,0" />
                    <Grid Grid.Row="3" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="0" SelectedItem="{Binding Settings.ToshibaAcUpdateRate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  ItemsSource="{Binding FroniusUpdateRates}" ItemTemplate="{StaticResource ComboBoxTemplate}"/>
                        <TextBlock Grid.Column="1" Text="{Binding Settings.ToshibaAcUpdateRate, Converter={co:ByteEqualityToString Value=1, Equal={x:Static p:Resources.Second}, NotEqual={x:Static p:Resources.Seconds}}}" Margin="4,8,0,0"/>
                    </Grid>
                </Grid>
            </Grid>
        </GroupBox>

        <Grid Margin="0,32,-8,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="1" Content="{x:Static p:Resources.Cancel}" Click="OnCancelClick" IsCancel="True"/>
            <Button Grid.Column="2" Content="{x:Static p:Resources.Ok}" Command="{Binding OkCommand}" IsDefault="True"/>

        </Grid>
    </StackPanel>
</Window>