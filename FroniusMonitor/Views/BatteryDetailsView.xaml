<Window x:Class="De.Hochstaetter.FroniusMonitor.Views.BatteryDetailsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
        xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
        xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
        xmlns:m="clr-namespace:De.Hochstaetter.FroniusMonitor.Models"
        xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
        xmlns:t="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Resources"
        xmlns:l="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Localization"
        xmlns:v="clr-namespace:De.Hochstaetter.FroniusMonitor.Views"
        xmlns:a="clr-namespace:De.Hochstaetter.FroniusMonitor"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:BatteryDetailsViewModel}"
        Title="{Binding Title}" Height="450" Width="800">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--<Menu Grid.Row="0">
            <MenuItem x:Name="View" Header="{x:Static p:Resources.View}" IsCheckable="False" IsChecked="False" Click="CheckShowAll">
                <MenuItem.Resources>
                    <Style TargetType="MenuItem">
                        <Setter Property="IsCheckable" Value="True" />
                        <Setter Property="IsChecked" Value="False" />
                    </Style>
                </MenuItem.Resources>
                <MenuItem Header="{x:Static p:Resources.ShowAll}" IsCheckable="True" Click="CheckAllViews"/>
                <MenuItem x:Name="DcPower" Header="{x:Static p:Resources.DcPower}" IsChecked="True"/>
                <MenuItem x:Name="DcVoltage" Header="{x:Static p:Resources.DcVoltage}" IsChecked="True" />
                <MenuItem x:Name="DcCurrent" Header="{x:Static p:Resources.DcCurrent}" IsChecked="True" />
                <MenuItem x:Name="Temperatures" Header="{x:Static p:Resources.Temperatures}"/>
                <MenuItem x:Name="Fans" Header="{x:Static p:Resources.Fans}"/>
                <MenuItem x:Name="AcPhaseVoltageFeedIn" Header="{x:Static p:Resources.AcPhaseVoltageFeedIn}"/>
                <MenuItem x:Name="ΔAcPhaseVoltageFeedIn" Header="{x:Static p:Resources.ΔAcPhaseVoltageFeedIn}"/>
                <MenuItem x:Name="AcLineVoltageFeedIn" Header="{x:Static p:Resources.AcLineVoltageFeedIn}"/>
                <MenuItem x:Name="ΔAcLineVoltageFeedIn" Header="{x:Static p:Resources.ΔAcLineVoltageFeedIn}"/>
                <MenuItem x:Name="Frequency" Header="{x:Static p:Resources.Frequency}"/>
                <MenuItem x:Name="ActivePower" Header="{x:Static p:Resources.ActivePower}" IsChecked="True"/>
                <MenuItem x:Name="ApparentPower" Header="{x:Static p:Resources.ApparentPower}"/>
                <MenuItem x:Name="ReactivePower" Header="{x:Static p:Resources.ReactivePower}"/>
                <MenuItem x:Name="PowerFactor" Header="cos(ϕ)"/>
                <MenuItem x:Name="Efficiency" Header="{x:Static p:Resources.Efficiency}" IsChecked="True"/>
                <MenuItem x:Name="AcCurrent" Header="{x:Static p:Resources.AcCurrent}"/>
                <MenuItem x:Name="OutOfBalance" Header="{x:Static p:Resources.OutOfBalance}"/>
            </MenuItem>
        </Menu>-->

        <TextBlock Grid.Row="1" Text="{Binding Header}" TextAlignment="Center" FontSize="18" FontWeight="Medium" Margin="10,10,10,16" TextWrapping="Wrap" />

        <!--<TextBlock Grid.Row="2" Text="{x:Static p:Resources.CheckAtLeastOneView}" TextAlignment="Center" FontSize="14" Margin="10,10,10,16" TextWrapping="Wrap" Visibility="{Binding IsNoneSelected, Converter={co:Bool2Visibility}}" />-->

        <ScrollViewer Grid.Row="3" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <!-- ReSharper disable Xaml.PossibleNullReferenceException -->
            <WrapPanel Orientation="Horizontal" Margin="10,0,4,0">
                <WrapPanel.LayoutTransform>
                    <ScaleTransform x:Name="Scaler" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}" />
                </WrapPanel.LayoutTransform>
                <WrapPanel.Resources>

                    <Style TargetType="c:Gauge" BasedOn="{StaticResource DefaultHalfCircleGauge}" x:Key="HalfCircleGauge">
                        <Setter Property="ColorAllTicks" Value="{Binding ColorAllGaugeTicks, Source={x:Static a:App.Settings}}" />
                    </Style>
                    
                    <Style TargetType="c:Gauge" BasedOn="{StaticResource HalfCircleGauge}" x:Key="PercentageGauge">
                        <Setter Property="UnitName" Value="%" />
                        <Setter Property="Maximum" Value="100" />
                        <Setter Property="GaugeColors" Value="{x:Static c:Gauge.LowIsBad}" />
                    </Style>

                    <Style TargetType="ContentControl">
                        <Setter Property="ContentTemplate" Value="{StaticResource BatteryGauge}" />
                    </Style>

                    <Style TargetType="GroupBox">
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="FontWeight" Value="Medium" />
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="Padding" Value="4" />
                    </Style>
                </WrapPanel.Resources>
                
                <GroupBox Header="{x:Static p:Resources.SoC}">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="c:Gauge" BasedOn="{StaticResource PercentageGauge}">
                            </Style>
                        </StackPanel.Resources>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl>
                                <c:Gauge Value="{m:GaugeBinding Battery.StateOfCharge, Converter={co:Multiply Factor=100}}" Label="{x:Static p:Resources.Gross}" />
                            </ContentControl>
                            <ContentControl>
                                <c:Gauge Value="{m:GaugeBinding HomeAutomationSystem.NetStateOfChange, Converter={co:Multiply Factor=100}}" Label="{x:Static p:Resources.Net}" />
                            </ContentControl>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{x:Static p:Resources.SoH}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl>
                                <c:Gauge Value="{m:GaugeBinding Battery.StateOfHealth, Converter={co:Multiply Factor=100}}" Label="SoH"
                                         Style="{StaticResource PercentageGauge}" Minimum="70" />
                            </ContentControl>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{x:Static p:Resources.Capacity}">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="c:Gauge" BasedOn="{StaticResource HalfCircleGauge}">
                                <Setter Property="UnitName" Value="Wh" />
                                <Setter Property="StringFormat" Value="N0"/>
                                <Setter Property="Maximum" Value="{Binding Battery.MaxCapacity, FallbackValue=58000}" />
                                <Setter Property="GaugeColors" Value="{x:Static c:Gauge.LowIsBad}" />
                            </Style>
                        </StackPanel.Resources>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl>
                                <c:Gauge Value="{m:GaugeBinding Battery.AvailableCapacity}" Label="{x:Static p:Resources.Gross}"/>
                            </ContentControl>

                            <ContentControl>
                                <c:Gauge Value="{m:GaugeBinding HomeAutomationSystem.StorageNetCapacity}" Label="{x:Static p:Resources.Net}"
                                         Maximum="{Binding HomeAutomationSystem.MaxStorageNetCapacity, FallbackValue=54500}"/>
                            </ContentControl>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                
            </WrapPanel>
            <!-- ReSharper restore Xaml.PossibleNullReferenceException -->
        </ScrollViewer>

    </Grid>
</Window>
