<c:ScalableWindow x:Class="De.Hochstaetter.FroniusMonitor.Views.PriceView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:oxy="http://oxyplot.org/wpf/contrib"
                  xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
                  xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
                  xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
                  xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
                  xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
                  xmlns:charging="clr-namespace:De.Hochstaetter.Fronius.Models.Charging;assembly=Fronius"
                  xmlns:vi="clr-namespace:De.Hochstaetter.FroniusMonitor.Assets.Images"
                  mc:Ignorable="d"
                  d:DataContext="{d:DesignInstance Type=vm:PriceViewModel}"
                  Title="{x:Static p:Resources.ElectricityPrice}" Height="550" Width="1280"
                  MinWidth="300" MinHeight="200">
    <Grid>
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="ScaleTransform" />
        </Grid.LayoutTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <oxy:Plot Grid.Row="0" Title="Electricity Prices" Model="{Binding PlotModel}" />
        <Viewbox Grid.Row="0" Margin="50" Stretch="Uniform" StretchDirection="Both" MaxWidth="600">
            <ItemsControl ItemsSource="{Binding Errors}" VerticalAlignment="Center" >
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" Foreground="#A0ff0000" Text="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Viewbox>

        <GroupBox BorderBrush="#60000000" Header="{x:Static p:Resources.Settings}" Grid.Row="1" Margin="8" HorizontalAlignment="Center" IsEnabled="{Binding IsBusy, Converter={co:BoolInverter}}">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="Margin" Value="16,2,0,0" />
                    </Style>
                </Grid.Resources>

                <RadioButton Grid.Row="0" Grid.Column="0" Content="{x:Static p:Resources.BuyingPrice}" Margin="0,2,0,0" GroupName="Price" Checked="OnConsumptionViewChecked" IsChecked="True" />
                <RadioButton Grid.Row="1" Grid.Column="0" Content="{x:Static p:Resources.MarketPrice}" Margin="0,2,0,0" GroupName="Price" Checked="OnMarketViewChecked" />

                <RadioButton Grid.Row="0" Grid.Column="1" Content="{x:Static p:Resources.WithoutVat}" GroupName="Vat" IsChecked="{Binding UseVat, Converter={co:BoolInverter}}" />
                <RadioButton Grid.Row="1" Grid.Column="1" Content="{x:Static p:Resources.WithVat}" GroupName="Vat" IsChecked="{Binding UseVat}" />

                <RadioButton Grid.Row="0" Grid.Column="2" Content="{x:Static p:Resources.Today}" GroupName="Historic" IsChecked="{Binding ShowHistoricData, Converter={co:BoolInverter}}"
                             Visibility="{Binding ElectricityPriceService.SupportsHistoricData, Converter={co:Bool2Visibility}}" />
                <RadioButton Grid.Row="1" Grid.Column="2" Content="{x:Static p:Resources.Historic}" GroupName="Historic" IsChecked="{Binding ShowHistoricData}"
                             Visibility="{Binding ElectricityPriceService.SupportsHistoricData, Converter={co:Bool2Visibility}}" />

                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" IsEnabled="{Binding ShowHistoricData}"
                            Visibility="{Binding ElectricityPriceService.SupportsHistoricData, Converter={co:Bool2Visibility}}">
                    <StackPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource TransparentButton}">
                            <Setter Property="FontSize" Value="28"/>
                            <Setter Property="Margin" Value="0,1,0,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value=".3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <Button Margin="16,1,2,0" Click="DecreaseDate" x:Name="DecreaseButton">
                        <Button.Content>
                            <TextBlock Text="&lt;" Margin="0,-7,0,0"/>
                        </Button.Content>
                        </Button>
                    <DatePicker VerticalAlignment="Center" x:Name="DatePicker"
                                SelectedDate="{Binding Date, StringFormat=d, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, UpdateSourceTrigger=PropertyChanged}"
                                DisplayDateEnd="{Binding Converter={co:ElectricityPriceEndDate}, Mode=OneWay}"
                                DisplayDateStart="2013/12/22 00:00" SelectedDateChanged="SelectedDateChanged"/>
                    <Button Click="IncreaseDate" x:Name="IncreaseButton">
                        <Button.Content>
                            <TextBlock Text=">" Margin="2,-7,0,0"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
        </GroupBox>
    </Grid>
</c:ScalableWindow>