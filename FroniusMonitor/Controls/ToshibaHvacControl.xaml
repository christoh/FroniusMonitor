<UserControl x:Class="De.Hochstaetter.FroniusMonitor.Controls.ToshibaHvacControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
             xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
             xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
             xmlns:images="clr-namespace:De.Hochstaetter.FroniusMonitor.Assets.Images"
             mc:Ignorable="d"
             d:DesignHeight="150" d:DesignWidth="150">
    <Viewbox DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
        <Border BorderBrush="DimGray" BorderThickness="1" Width="150">
            <Border.Background>
                <MultiBinding Converter="{co:ToshibaHvacStatus2Brush}">
                    <Binding Path="SolarSystemService.AcService.IsConnected" />
                    <Binding Path="Device.State.IsTurnedOn" />
                </MultiBinding>
            </Border.Background>
            <Grid Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Viewbox Grid.Row="0" StretchDirection="DownOnly">
                    <TextBlock FontSize="12" TextAlignment="Center" Text="{x:Static p:Resources.ToshibaHvac}" />
                </Viewbox>

                <Viewbox Grid.Row="1" StretchDirection="DownOnly">
                    <TextBlock FontSize="12" TextAlignment="Center" Text="{Binding Device.Name, FallbackValue='---'}" />
                </Viewbox>

                <ToggleButton x:Name="PowerButton" Grid.Row="2" Height="11" Margin="0,3,0,0" IsChecked="{Binding Device.State.IsTurnedOn, Mode=OneWay}" Click="OnPowerClicked" />

                <Grid Grid.Row="3" Margin="0,3,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Style TargetType="c:HvacButton" BasedOn="{StaticResource HvacButtonStyle}">
                            <Setter Property="Margin" Value="2" />
                            <Setter Property="Foreground" Value="Black" />
                            <EventSetter Event="Click" Handler="OnModeClicked" />
                        </Style>

                        <Style TargetType="Button" BasedOn="{StaticResource TransparentButton}" />
                    </Grid.Resources>

                    <c:HvacButton x:Name="HvacButton1" Grid.Column="0" Mode="Auto" Background="{Binding Device.State.Mode, Converter={co:ToshibaAcOperatingMode2Brush Value=Auto, Equal=Aquamarine, NotEqual=Transparent}}" />
                    <c:HvacButton Grid.Column="1" Mode="Cooling" Background="{Binding Device.State.Mode, Converter={co:ToshibaAcOperatingMode2Brush Value=Cooling, Equal=Aquamarine, NotEqual=Transparent}}" />
                    <c:HvacButton Grid.Column="2" Mode="Drying" Background="{Binding Device.State.Mode, Converter={co:ToshibaAcOperatingMode2Brush Value=Drying, Equal=Aquamarine, NotEqual=Transparent}}" />
                    <c:HvacButton Grid.Column="3" Mode="Heating" Background="{Binding Device.State.Mode, Converter={co:ToshibaAcOperatingMode2Brush Value=Heating, Equal=Aquamarine, NotEqual=Transparent}}" />
                    <c:HvacButton Grid.Column="4" Mode="FanOnly" Background="{Binding Device.State.Mode, Converter={co:ToshibaAcOperatingMode2Brush Value=FanOnly, Equal=Aquamarine, NotEqual=Transparent}}" />
                </Grid>

                <Grid Grid.Row="5" Margin="0,4,0,0">
                    <Grid.Resources>

                        <Style TargetType="ButtonBase" BasedOn="{StaticResource TransparentButton}" x:Key="HoverButton">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Height" Value="30" />
                            <Setter Property="Margin" Value="4,0,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ButtonBase">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value=".5" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <TranslateTransform Y="-2" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource MouseOverFill}" />
                                                <Setter Property="Border.BorderBrush" Value="{StaticResource MouseOverStroke}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <c:HvacFanSpeedButton Style="{StaticResource HoverButton}" Grid.Column="0" Margin="0"
                                          FanSpeed="{Binding Device.State.FanSpeed}" FanBrush="LimeGreen" Click="OnFanSpeedClicked" />

                    <c:HvacPowerLimitButton Style="{StaticResource HoverButton}" Grid.Column="1" PowerBorderBrush="Black" Click="OnPowerLimitClicked"
                                            PowerLimit="{Binding Device.State.PowerLimit}" PowerBrush="LimeGreen" />

                    <c:HvacMeritFeatureAButton Grid.Column="2" Style="{StaticResource HoverButton}" MeritFeaturesA="{Binding Device.State.MeritFeaturesA}" Click="OnMeritFeaturesAClicked"/>

                </Grid>

                <StackPanel Grid.Row="4" Background="#B3DBC6" Margin="2">
                    <Grid Margin="0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.Resources>
                            <Style TargetType="TextBlock" x:Key="TemperatureSmall">
                                <Setter Property="Margin" Value="2,0,2,0" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="Grid.Column" Value="1" />
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </Grid.Resources>

                        <Button Style="{StaticResource TransparentButton}" Grid.Row="0" Grid.Column="0" Margin="2,0,0,0" Click="OnTemperatureUpClicked" HorizontalAlignment="Center">
                            <Polygon SnapsToDevicePixels="False" Fill="{Binding Foreground}" Points="0,10 66,10 33.5,0" />
                        </Button>

                        <TextBlock HorizontalAlignment="Center" Margin="2,-3,0,0" Text="{Binding Device.State.TargetTemperatureCelsius, StringFormat={}{0:00}°C}" FontSize="28" FontWeight="DemiBold" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" />

                        <Button Grid.Row="3" Grid.Column="0" Margin="2,0,0,0" Style="{StaticResource TransparentButton}" Click="OnTemperatureDownClicked" HorizontalAlignment="Center">
                            <Polygon SnapsToDevicePixels="False" Fill="{Binding Foreground}" Points="0,0 66,0 33.5,10" />
                        </Button>

                        <images:House Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Height="14" Margin="2,0,2,0" VerticalAlignment="Center" />
                        <images:Tree Grid.Row="2" Grid.RowSpan="2" Grid.Column="2" Height="14" Margin="2,0,2,0" VerticalAlignment="Center" />

                        <!-- ReSharper disable Xaml.MissingGridIndex -->
                        <TextBlock Style="{StaticResource TemperatureSmall}" Grid.Row="0" Text="{Binding Device.State.CurrentIndoorTemperatureCelsius, TargetNullValue='-- °C', StringFormat={}{0:00}°C}" />
                        <TextBlock Style="{StaticResource TemperatureSmall}" Grid.Row="2" Text="{Binding Device.State.CurrentOutdoorTemperatureCelsius, TargetNullValue='-- °C', StringFormat={}{0:00}°C}" />
                        <!-- ReSharper restore Xaml.MissingGridIndex -->
                    </Grid>
                </StackPanel>
            </Grid>
        </Border>
    </Viewbox>
</UserControl>